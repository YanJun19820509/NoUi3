// Effect Syntax Guide: https://github.com/cocos-creator/docs-3d/blob/master/zh/material-system/effect-syntax.md


CCEffect %{
  techniques:
  - passes:
    - vert: vs:vert
      frag: fs:frag
      blendState:
        targets:
        - blend: true
          blendSrc: one
          blendDst: one_minus_src_alpha
          blendSrcAlpha: one
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
      depthStencilState:
        depthTest: false
        depthWrite: false
      properties:
        i_min: { value: [0., 0.], target: i_min_max_uv.xy}
        i_max: { value: [1., 1.], target: i_min_max_uv.zw}
        amplitude: { value: 0.05, range: [0.0, 0.5], editor: { tooltip: '振幅' } }
        angularVelocity: { value: 10.0, editor: { tooltip: '角速度' } }
        frequency: { value: 10.0, editor: { tooltip: '频率' } }
        offset: { value: 0.5, range: [0.0, 1.0], editor: { tooltip: '偏距' } }
        toLeft: { value: false, editor: { type: boolean, tooltip: '向左（方向）' } }
        
        switchTexture: {value: white}
        cells: {value: [1,1]}
        fps: { value: 1. }
        blendType: { value: 1., editor: {range:[1.,6.,1.]} }
}%

CCProgram vs %{
  #include <graphics-vs>
}%

CCProgram fs %{
  #include <graphics-fs>
  #include <cc-global>
  #include <embedded-alpha>
  #include <alpha-test>
  #include <utils>

    uniform sampler2D switchTexture;
     
    uniform SwitchData{
      vec2 cells;
      float fps;
      float blendType;
    };
     
    uniform WaveData{
      float amplitude;
      float angularVelocity;
      float frequency;
      float offset;
      bool toLeft;
    };

  vec4 frag () {
    //初始化自定义图形的颜色和 uv
    initGraphicsColorUV();
    // float D = abs(v_dist);//v_dist * 0.5 + 0.5;
    // color.rgb = Pallete(D);
    if (isUvInside()){
      #if IS_WAVE
        graphicsWave(color, uv0, amplitude, angularVelocity, frequency, offset, toLeft);
      #endif

      #if IS_SWITCH
        vec4 c2 = textureSwitch(switchTexture, uv0, cells, fps);
        color = blend(color, c2, blendType);
      #endif
    }else{
      discard;
    }
    return color;
  }
}%
