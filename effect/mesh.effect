// Effect Syntax Guide: https://github.com/cocos-creator/docs-3d/blob/master/zh/material-system/effect-syntax.md

CCEffect %{
  techniques:
  - passes:
    - vert: vs:vert 
      frag: unlit-fs:frag
      depthStencilState:
        depthTest: false
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
      properties:
        point: { value: [0.5, 0.5] }
        scaleMin: {value: 1.0}
        scaleMax: {value: 1.0}
        yMin: {value: 1.0}
}%

CCProgram vs %{
  #include <common-vs>

  vec4 vert(){
    return getPos();
  }
}%

CCProgram unlit-fs %{
  precision highp float;
  #include <embedded-alpha>
  #include <alpha-test>

  in vec4 color;

  uniform MeshData {
    vec2 point;
    float scaleMin;
    float scaleMax;
    float yMin;
  };
       
  in vec2 uv0;
  #pragma builtin(local)
  layout(set = 2, binding = 11) uniform sampler2D cc_spriteTexture;

  vec4 frag () {
    vec4 o = vec4(1, 1, 1, 1);
    vec2 uv = vec2(point.x,point.y);
    float smin = scaleMin;// * (1.0 - uv.y);
    float s = smin + (scaleMax - smin) *(uv0.y - yMin);
    // float s = .5+uv.y;
    uv.x = uv.x - (uv.x - uv0.x)/s;
    uv.y = uv.y - (uv.y - uv0.y)/s;
    if(uv.x > 1.0 || uv.x < 0.0 || uv.y > 1.0 || uv.y < 0.0){
      //超出纹理范围的用透明填充
      o = vec4(0, 0, 0, 0);
    }else{
      o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv); 
      if(o.a == 0.0){
        //发现透明度为0的坐标，直接用透明填充
        o = vec4(0, 0, 0, 0);
      }
    }
    o *= color;

    ALPHA_TEST(o);
    return o;
  }
}%
