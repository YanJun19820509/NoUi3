import * as _cc from 'cc';
import * as env from 'cc/env';
import { AssetInfo } from './@types/packages/asset-db/@types/public';

export const { ccclass, property, executeInEditMode, requireComponent, menu, disallowMultiple, type } = _cc._decorator;
export let { DEBUG, WECHAT, EDITOR, JSB } = env;

export type _AssetInfo = AssetInfo;
export interface Component extends _cc.Component { };
export class Component extends _cc.Component { };
export const Vec2 = _cc.Vec2;
export type Vec2 = _cc.Vec2;
export const Vec3 = _cc.Vec3;
export type Vec3 = _cc.Vec3;
export const Vec4 = _cc.Vec4;
export type Vec4 = _cc.Vec4;
export const Rect = _cc.Rect;
export type Rect = _cc.Rect;
export const Size = _cc.Size;
export type Size = _cc.Size;
export const Quat = _cc.Quat;
export type Quat = _cc.Quat;
export const EventHandler = _cc.EventHandler;
export type EventHandler = _cc.EventHandler;
export const Color = _cc.Color;
export type Color = _cc.Color;

export const Node = _cc.Node;
export type Node = _cc.Node;
export const Asset = _cc.Asset;
export type Asset = _cc.Asset;
export const ImageAsset = _cc.ImageAsset;
export type ImageAsset = _cc.ImageAsset;
export const AudioClip = _cc.AudioClip;
export type AudioClip = _cc.AudioClip;
export const VideoClip = _cc.VideoClip;
export type VideoClip = _cc.VideoClip;
export const JsonAsset = _cc.JsonAsset;
export type JsonAsset = _cc.JsonAsset;
export const Material = _cc.Material;
export type Material = _cc.Material;
export const Prefab = _cc.Prefab;
export type Prefab = _cc.Prefab;
export const SpriteAtlas = _cc.SpriteAtlas;
export type SpriteAtlas = _cc.SpriteAtlas;
export const TextAsset = _cc.TextAsset;
export type TextAsset = _cc.TextAsset;
export const EffectAsset = _cc.EffectAsset;
export type EffectAsset = _cc.EffectAsset;
export const BufferAsset = _cc.BufferAsset;
export type BufferAsset = _cc.BufferAsset;
export const AnimationClip = _cc.AnimationClip;
export type AnimationClip = _cc.AnimationClip;
export const Texture2D = _cc.Texture2D;
export type Texture2D = _cc.Texture2D;
export const RenderTexture = _cc.RenderTexture;
export type RenderTexture = _cc.RenderTexture;
export const SkeletonData = _cc.sp.SkeletonData;
export type SkeletonData = _cc.sp.SkeletonData;
export const SpriteFrame = _cc.SpriteFrame;
export type SpriteFrame = _cc.SpriteFrame;
export const Font = _cc.Font;
export type Font = _cc.Font;
export const TTFFont = _cc.TTFFont;
export type TTFFont = _cc.TTFFont;
export const UIRenderer = _cc.UIRenderer;
export type UIRenderer = _cc.UIRenderer;
export const Sprite = _cc.Sprite;
export type Sprite = _cc.Sprite;
export const BitmapFont = _cc.BitmapFont;
export type BitmapFont = _cc.BitmapFont;
export const Label = _cc.Label;
export type Label = _cc.Label;
export const Skeleton = _cc.sp.Skeleton;
export type Skeleton = _cc.sp.Skeleton;
export const AnimationCacheMode = _cc.sp.AnimationCacheMode;
export type AnimationCacheMode = _cc.sp.AnimationCacheMode;
export const Canvas = _cc.Canvas;
export type Canvas = _cc.Canvas;
export const Camera = _cc.Camera;
export type Camera = _cc.Camera;
export const ResolutionPolicy = _cc.ResolutionPolicy;
export type ResolutionPolicy = _cc.ResolutionPolicy;
export const Widget = _cc.Widget;
export type Widget = _cc.Widget;
export const Touch = _cc.Touch;
export type Touch = _cc.Touch;
export const AudioSource = _cc.AudioSource;
export type AudioSource = _cc.AudioSource;
export const EventTouch = _cc.EventTouch;
export type EventTouch = _cc.EventTouch;
export const AssetsManager = _cc.native.AssetsManager;
export type AssetsManager = _cc.native.AssetsManager;
export const Manifest = _cc.native.Manifest;
export type Manifest = _cc.native.Manifest;
export const Toggle = _cc.Toggle;
export type Toggle = _cc.Toggle;
export const ScrollView = _cc.ScrollView;
export type ScrollView = _cc.ScrollView;
export const SafeArea = _cc.SafeArea;
export type SafeArea = _cc.SafeArea;
export const UITransform = _cc.UITransform;
export type UITransform = _cc.UITransform;
export const UIOpacity = _cc.UIOpacity;
export type UIOpacity = _cc.UIOpacity;
export const ToggleContainer = _cc.ToggleContainer;
export type ToggleContainer = _cc.ToggleContainer;
export const LabelOutline = _cc.LabelOutline;
export type LabelOutline = _cc.LabelOutline;
export const LabelShadow = _cc.LabelShadow;
export type LabelShadow = _cc.LabelShadow;
export const HorizontalTextAlignment = _cc.HorizontalTextAlignment;
export type HorizontalTextAlignment = _cc.HorizontalTextAlignment;
export const VerticalTextAlignment = _cc.VerticalTextAlignment;
export type VerticalTextAlignment = _cc.VerticalTextAlignment;
export const Overflow = _cc.Overflow;
export type Overflow = _cc.Overflow;
export const ProgressBar = _cc.ProgressBar;
export type ProgressBar = _cc.ProgressBar;
export const Layout = _cc.Layout;
export type Layout = _cc.Layout;
export const Mask = _cc.Mask;
export type Mask = _cc.Mask;
export const Slider = _cc.Slider;
export type Slider = _cc.Slider;
export const VideoPlayer = _cc.VideoPlayer;
export type VideoPlayer = _cc.VideoPlayer;
export const RichText = _cc.RichText;
export type RichText = _cc.RichText;
export const CacheMode = _cc.CacheMode;
export type CacheMode = _cc.CacheMode;
export const StencilManager = _cc.StencilManager;
export type StencilManager = _cc.StencilManager;
export const PageView = _cc.PageView;
export type PageView = _cc.PageView;
export const Animation = _cc.Animation;
export type Animation = _cc.Animation;
export const BlockInputEvents = _cc.BlockInputEvents;
export type BlockInputEvents = _cc.BlockInputEvents;
export const EditBox = _cc.EditBox;
export type EditBox = _cc.EditBox;
export const Graphics = _cc.Graphics;
export type Graphics = _cc.Graphics;
export const ParticleSystem2D = _cc.ParticleSystem2D;
export type ParticleSystem2D = _cc.ParticleSystem2D;
export const ParticleSystem = _cc.ParticleSystem;
export type ParticleSystem = _cc.ParticleSystem;
export type IHtmlTextParserStack = _cc.IHtmlTextParserStack;
export type IHtmlTextParserResultObj = _cc.IHtmlTextParserResultObj;
export const HtmlTextParser = _cc.HtmlTextParser;
export type HtmlTextParser = _cc.HtmlTextParser;
export const MeshRender = _cc.MeshRenderer;
export type MeshRender = _cc.MeshRenderer;

export const Game = _cc.Game;
export const Enum = _cc.Enum;
export const CCString = _cc.CCString;
export const Layers = _cc.Layers;

export class EventTarget extends _cc.EventTarget { };
export const Button = _cc.Button;
export type Button = _cc.Button;
export class Tween extends _cc.Tween<unknown> { };
export class Bundle extends _cc.AssetManager.Bundle { };
export class AssetManager extends _cc.AssetManager { };
export class Scheduler extends _cc.Scheduler { };

export const macro = _cc.macro;
export const isValid = _cc.isValid;
export const random = _cc.random;
export const sys = _cc.sys;
export const view = _cc.view;
export const js = _cc.js;
export const tween = _cc.tween;
export const v2 = _cc.v2;
export const v3 = _cc.v3;
export const v4 = _cc.v4;
export const quat = _cc.quat;
export const director = _cc.director;
export const instantiate = _cc.instantiate;
export const assetManager = _cc.assetManager;
export const game = _cc.game;
export const color = _cc.color;
export const dynamicAtlasManager = _cc.DynamicAtlasManager.instance;
export const gfx = _cc.gfx;
export const rect = _cc.rect;
export const size = _cc.size;
export const screen = _cc.screen;
export const native = _cc.native;
export const math = _cc.math;
export const widgetManager = _cc.widgetManager;
export type LayoutType = _cc.__private._cocos_ui_layout__Type;
export type LayoutResizeMode = _cc.__private._cocos_ui_layout__ResizeMode;
export const find = _cc.find;
export const CCClass = _cc.CCClass;
export const easing = _cc.easing;
export type WrapMode = _cc.__private._cocos_animation_types__WrapMode;
export const NodeEventType = _cc.NodeEventType;
export const isBrowser = sys.isBrowser;
export const TransformBit = _cc.TransformBit;
export const path = _cc.path;
export function setDisplayStats(v: boolean) {
    if (v) _cc.profiler.showStats();
    else _cc.profiler.hideStats();
}
export function isDisplayStats() {
    return _cc.profiler.isShowingStats();
}


//3d
export const Ray = _cc.geometry.Ray;
export type Ray = _cc.geometry.Ray;
export const Input = _cc.Input;
export const input = _cc.input;
export const PhysicsSystem = _cc.PhysicsSystem;